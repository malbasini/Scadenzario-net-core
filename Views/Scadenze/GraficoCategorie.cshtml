@model Scadenzario.Models.ViewModels.Scadenze.GraficoCategorieViewModel

@using System.Text.Json
@using Microsoft.AspNetCore.Mvc.Rendering
@{
     
        Layout = "_Layout1.cshtml";
        ViewData["Title"] = "Spese per categoria";
        var labelsJson = JsonSerializer.Serialize(Model.Labels);
        var valuesJson = JsonSerializer.Serialize(Model.Values);
        // Variante 2 â€“ pattern matching (C# 13+)
        string range = Model.Dal is { } dal && Model.Al is { } al
            ? $"({dal:dd-MM-yyyy} â†’ {al:dd-MM-yyyy}) anno " + Model.AnnoSelezionato
            : string.Empty;
}
@{
    var items = new SelectList(new[] { "bar","line","pie","doughnut","polarArea","radar" }, Model.Chart);
}
<!doctype html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]@range</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body { font-family: system-ui, Arial, sans-serif; margin: 24px; }
        .wrap { max-width: 12000px; margin: 0 auto; }
        .toolbar { margin-bottom: 16px; display:flex; gap:8px; align-items:center;}
        .chart-wrap {
            position: relative;
            width: 100%;
            height: 420px;      /* altezza fissa: regola a piacere */
            overflow: hidden;
        }
        #chart {
            display: block;     /* evita spazio baseline */
            width: 100% !important;
            height: 100% !important;  /* riempi il contenitore */
        }
    </style>
</head>
<body>
<div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <div class="alert alert-success" role="alert">
            <h3 style="text-align: center"><b>GRAFICO SPESE PER BENEFICIARIO</b></h3>
        </div>
    </div>
    <div class="col-md-2"></div>
</div>
<br>
<div class="wrap">
    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-10">
            <h2>
               @{
                   var spese = !string.IsNullOrEmpty(range) ? "Spese per beneficiario " + range : string.Empty;
                   @spese.TrimEnd(';')
               }
            </h2>
        </div>
   </div>  
    <div class="toolbar">
        <form method="get" asp-action="GraficoCategorie" asp-controller="Scadenze">
            <input type="hidden" name="filter" value="@Model.Filter"/>
            <div class="row">
                <div class="col-md-12 ms-xl-5">
                    <div class="input-group">
                        <div class="input-group-text">
                            dal: <input type="date" name="dal" class="form-control form-control-sm" value="@(Model.Dal?.ToString("yyyy-MM-dd"))"/>
                        </div>
                        <div class="input-group-text">
                            al: <input type="date" name="al" class="form-control form-control-sm" value="@(Model.Al?.ToString("yyyy-MM-dd"))"/>
                        </div>
                        <div class="input-group-text">
                            <button type="submit" class="btn btn-outline-primary form-control form-control-sm">Applica</button>
                        </div>
                        <div class="input-group-text">
                            anno:
                            <select id="anno" name="anno" onchange="this.form.submit()" class="form-select form-select-sm" aria-label="Small select example">
                                @foreach (var y in Model.Anni)
                                {
                                    <option value="@y" selected="@(y == Model.AnnoSelezionato ? "selected" : null)">@y</option>
                                }
                            </select>
                        </div>
                        <div class="input-group-text">
                            tipo grafico:&nbsp;
                            <select id="chartType" name="chart" class="form-select form-select-sm" onchange="this.form.submit()"
                                    asp-items="items">

                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<div class="chart-wrap">
    <canvas id="chart"></canvas>
</div>
<script>
    const labels = @Html.Raw(labelsJson);
    const values = @Html.Raw(valuesJson);
    const initialType = '@Model.Chart';  // ðŸ‘ˆ usa il tipo passato dal controller

    document.addEventListener('DOMContentLoaded', () => {
        const el = document.getElementById('chart');
        if (window.__speseChart?.destroy) { try { window.__speseChart.destroy(); } catch {} }
        window.__speseChart = new Chart(el.getContext('2d'), {
            type: initialType,
            data: { labels, datasets: [{ label: 'Totale (â‚¬)', data: values }] },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                resizeDelay: 150,
                devicePixelRatio: Math.min(window.devicePixelRatio || 1, 2),
                scales: ['pie','doughnut','polarArea','radar'].includes(initialType) ? {} : { y: { beginAtZero: true } }
            }
        });
    });
</script>
</body>
</html>